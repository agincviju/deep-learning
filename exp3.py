# -*- coding: utf-8 -*-
"""exp3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iigQLPJ3akMgiFpJn4GuOgNhuLYKwyKg
"""

import tensorflow as tf

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense,Flatten
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

(x_train,y_train),(x_test,y_test)=mnist.load_data()

x_train=x_train/255.0
x_test=x_test/255.0

y_train=to_categorical(y_train,10)
y_test=to_categorical(y_test,10)

model=Sequential([Flatten(input_shape=(28,28)),Dense(128,activation='relu'),Dense(64,activation='relu'),Dense(10,activation='softmax')])

model.compile(optimizer='adam',loss='categorical_crossentropy',metrics=['accuracy'])

model.fit(x_train,y_train,epochs=10,batch_size=32,validation_split=0.2)

test_loss,test_acc=model.evaluate(x_test,y_test)
print(f'\n test accuracy:{test_acc:.4f}')

model.summary()

history = model.fit(
    x_train, y_train,
    epochs=10,
    batch_size=32,
    validation_split=0.2
)

import matplotlib.pyplot as plt

plt.plot(history.history['accuracy'], label='Train Accuracy')
plt.plot(history.history['val_accuracy'], label='Validation Accuracy')
plt.title('Model Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.legend()
plt.grid(True)
plt.show()

plt.plot(history.history['loss'], label='Train Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title('Model Loss')
plt.xlabel('Epoch')
plt.ylabel('Loss')
plt.legend()
plt.grid(True)
plt.show()